package AdminPanel

import (
	"fmt"
	"log"
	"strconv"

	tb "gopkg.in/telebot.v3"
)

func requestAdminApproval(c tb.Context, b *tb.Bot) (acceptBtn, rejectBtn tb.InlineButton) {
	adminID := GetAdminID()
	msg := fmt.Sprintf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s (%d) —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É.", c.Sender().FirstName, c.Sender().ID)

	acceptBtn = tb.InlineButton{
		Unique: "accept",
		Text:   "–î–∞",
		Data:   strconv.FormatInt(c.Sender().ID, 10),
	}
	rejectBtn = tb.InlineButton{
		Unique: "reject",
		Text:   "–ù–µ—Ç",
		Data:   strconv.FormatInt(c.Sender().ID, 10),
	}
	inlineKeys := [][]tb.InlineButton{{acceptBtn, rejectBtn}}

	_, err := b.Send(tb.ChatID(adminID), msg, &tb.ReplyMarkup{InlineKeyboard: inlineKeys})
	if err != nil {
		return tb.InlineButton{}, tb.InlineButton{}
	}

	c.Send("–î–æ–∂–¥–∏—Ç–µ—Å—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")

	return
}

func CreateAdminApprovalHandlers(c tb.Context, b *tb.Bot, setHouse *tb.ReplyMarkup) {

	livingRulesHandlerText := "üìå–ó–∞–µ–∑–¥ –≤ 15—á, –≤—ã–µ–∑–¥ –¥–æ 12—á, –µ—Å–ª–∏ –Ω–µ –æ–≥–æ–≤–æ—Ä–µ–Ω—ã –¥—Ä—É–≥–∏–µ —É—Å–ª–æ–≤–∏—è\n" +
		"üìå–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —à—É–º–∏—Ç–µ –Ω–∞ —É–ª–∏—Ü–µ –∏ –æ–±—â–µ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –ø–æ—Å–ª–µ 23—á\n" +
		"üìå–ö—É—Ä–µ–Ω–∏–µ –≤ –¥–æ–º–∞—Ö –≤ —Ç–æ–º —á–∏—Å–ª–µ –∫–∞–ª—å—è–Ω–æ–≤, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —Å–∏–≥–∞—Ä–µ—Ç –∏ –ø—Ä–æ—á–∏—Ö —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –≥–∞–¥–∂–µ—Ç–æ–≤ –∑–∞–ø—Ä–µ—â–µ–Ω–æ\n" +
		"üìå–ü—Ä–∏ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–∏ –±–æ–ª—å—à–µ 5-—Ç–∏ —Å—É—Ç–æ–∫ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è —É–±–æ—Ä–∫–∞ –¥–æ–º–∞ –Ω–∞ 4-—ã–µ —Å—É—Ç–∫–∏"
	acceptBtn, rejectBtn := requestAdminApproval(c, b)

	b.Handle(&acceptBtn, func(c tb.Context) error {
		userID, err := strconv.ParseInt(c.Data(), 10, 64)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏ –≤ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", err)
			return err
		}

		rulesMarkup := &tb.ReplyMarkup{ResizeKeyboard: true}
		acknowledgeBtn := rulesMarkup.Text("–û–ó–ù–ê–ö–û–ú–õ–ï–ù")
		rulesMarkup.Reply(rulesMarkup.Row(acknowledgeBtn))

		_, err = b.Send(tb.ChatID(userID), livingRulesHandlerText, rulesMarkup)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∞–≤–∏–ª –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:", err)
			return err
		}
		return nil
	})

	b.Handle("–û–ó–ù–ê–ö–û–ú–õ–ï–ù", func(c tb.Context) error {
		return c.Send("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.", setHouse)
	})

	b.Handle(&rejectBtn, func(c tb.Context) error {
		userID, err := strconv.ParseInt(c.Data(), 10, 64)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏ –≤ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", err)
			return err
		}
		_, err = b.Send(tb.ChatID(userID), "–í –¥–æ—Å—Ç—É–ø–µ –æ—Ç–∫–∞–∑–∞–Ω–æ.")
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:", err)
			return err
		}
		return nil
	})
}
